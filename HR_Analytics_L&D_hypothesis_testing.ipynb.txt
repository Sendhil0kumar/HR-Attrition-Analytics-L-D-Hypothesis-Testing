{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F4rSYJtQy8ZN",
        "outputId": "1f873fad-1be3-4497-f843-4e609bef1b04"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loading files...\n",
            "--- All files loaded successfully. ---\n",
            "--- Tables joined successfully. ---\n",
            "--- Date columns converted. ---\n",
            "--- Data de-duplicated to 1470 unique employees. ---\n",
            "--- 'TenureInYears' and 'Attrition_Binary' created. ---\n",
            "--- All missing values (NaNs) handled. ---\n",
            "--- Redundant columns dropped. ---\n",
            "\n",
            "--- Clean Dataframe Ready for Hypothesis Testing: ---\n",
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 1470 entries, 6448 to 4732\n",
            "Data columns (total 29 columns):\n",
            " #   Column                           Non-Null Count  Dtype  \n",
            "---  ------                           --------------  -----  \n",
            " 0   EmployeeID                       1470 non-null   object \n",
            " 1   Gender                           1470 non-null   object \n",
            " 2   Age                              1470 non-null   int64  \n",
            " 3   BusinessTravel                   1470 non-null   object \n",
            " 4   Department                       1470 non-null   object \n",
            " 5   DistanceFromHome (KM)            1470 non-null   int64  \n",
            " 6   State                            1470 non-null   object \n",
            " 7   Ethnicity                        1470 non-null   object \n",
            " 8   EducationField                   1470 non-null   object \n",
            " 9   JobRole                          1470 non-null   object \n",
            " 10  MaritalStatus                    1470 non-null   object \n",
            " 11  Salary                           1470 non-null   int64  \n",
            " 12  StockOptionLevel                 1470 non-null   int64  \n",
            " 13  OverTime                         1470 non-null   object \n",
            " 14  YearsAtCompany                   1470 non-null   int64  \n",
            " 15  YearsInMostRecentRole            1470 non-null   int64  \n",
            " 16  YearsSinceLastPromotion          1470 non-null   int64  \n",
            " 17  YearsWithCurrManager             1470 non-null   int64  \n",
            " 18  JobSatisfaction                  1470 non-null   float64\n",
            " 19  RelationshipSatisfaction         1470 non-null   float64\n",
            " 20  TrainingOpportunitiesWithinYear  1470 non-null   float64\n",
            " 21  TrainingOpportunitiesTaken       1470 non-null   float64\n",
            " 22  WorkLifeBalance                  1470 non-null   float64\n",
            " 23  SelfRating                       1470 non-null   float64\n",
            " 24  ManagerRating                    1470 non-null   float64\n",
            " 25  EducationLevel                   1470 non-null   object \n",
            " 26  SatisfactionLevel                1470 non-null   object \n",
            " 27  TenureInYears                    1470 non-null   float64\n",
            " 28  Attrition_Binary                 1470 non-null   int64  \n",
            "dtypes: float64(8), int64(9), object(12)\n",
            "memory usage: 344.5+ KB\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# --- 1. Load the Datasets ---\n",
        "print(\"Loading files...\")\n",
        "df_employee = pd.read_csv(\"/content/Employee[1].csv\")\n",
        "df_performance = pd.read_csv(\"/content/PerformanceRating[1].csv\")\n",
        "df_education = pd.read_csv(\"/content/EducationLevel[1].csv\")\n",
        "df_satisfaction = pd.read_csv(\"/content/SatisfiedLevel[1].csv\")\n",
        "df_rating_level = pd.read_csv(\"/content/RatingLevel[1].csv\")\n",
        "print(\"--- All files loaded successfully. ---\")\n",
        "\n",
        "\n",
        "# --- 2. Build the Physical Model (Join Tables) ---\n",
        "analysis_df = df_employee.copy()\n",
        "analysis_df = pd.merge(analysis_df, df_performance, on=\"EmployeeID\", how=\"left\")\n",
        "analysis_df = pd.merge(analysis_df, df_education, left_on=\"Education\", right_on=\"EducationLevelID\", how=\"left\")\n",
        "analysis_df = pd.merge(analysis_df, df_satisfaction, left_on=\"EnvironmentSatisfaction\", right_on=\"SatisfactionID\", how=\"left\", suffixes=('_Edu', '_EnvSat'))\n",
        "print(\"--- Tables joined successfully. ---\")\n",
        "\n",
        "\n",
        "# --- 3. Fix Data Types ---\n",
        "analysis_df['ReviewDate'] = pd.to_datetime(analysis_df['ReviewDate'])\n",
        "analysis_df['HireDate'] = pd.to_datetime(analysis_df['HireDate'])\n",
        "print(\"--- Date columns converted. ---\")\n",
        "\n",
        "\n",
        "# --- 4. Handle Duplicates: Get Most Recent Review ---\n",
        "analysis_df = analysis_df.sort_values(by=['EmployeeID', 'ReviewDate'], ascending=True)\n",
        "employee_df = analysis_df.drop_duplicates(subset='EmployeeID', keep='last').copy()\n",
        "print(f\"--- Data de-duplicated to {len(employee_df)} unique employees. ---\")\n",
        "\n",
        "\n",
        "# --- 5. Feature Engineering & Encoding ---\n",
        "# We must fill NaT 'ReviewDate' for new hires before finding the max\n",
        "latest_date = employee_df['ReviewDate'].max()\n",
        "employee_df['TenureInYears'] = (latest_date - employee_df['HireDate']).dt.days / 365.25\n",
        "employee_df['Attrition_Binary'] = employee_df['Attrition'].map({'Yes': 1, 'No': 0})\n",
        "print(\"--- 'TenureInYears' and 'Attrition_Binary' created. ---\")\n",
        "\n",
        "\n",
        "# --- 6. Handle All Missing Data ---\n",
        "# Fill NaNs for the employees who had no performance reviews\n",
        "cols_to_fill_zero = [\n",
        "    'TrainingOpportunitiesTaken', 'TrainingOpportunitiesWithinYear', 'ManagerRating',\n",
        "    'JobSatisfaction', 'TenureInYears', 'RelationshipSatisfaction', 'WorkLifeBalance', 'SelfRating'\n",
        "]\n",
        "for col in cols_to_fill_zero:\n",
        "    employee_df[col] = employee_df[col].fillna(0)\n",
        "\n",
        "employee_df['SatisfactionLevel'] = employee_df['SatisfactionLevel'].fillna('Not Rated')\n",
        "print(\"--- All missing values (NaNs) handled. ---\")\n",
        "\n",
        "\n",
        "# --- 7. Tidy Columns ---\n",
        "# Drop redundant columns for a clean final dataframe\n",
        "employee_df_clean = employee_df.drop(columns=[\n",
        "    'Education', 'EducationLevelID', 'EnvironmentSatisfaction', 'SatisfactionID',\n",
        "    'PerformanceID', 'ReviewDate', 'HireDate', 'FirstName', 'LastName', 'Attrition'\n",
        "]).copy()\n",
        "print(\"--- Redundant columns dropped. ---\")\n",
        "\n",
        "\n",
        "# --- FINAL CHECK ---\n",
        "print(\"\\n--- Clean Dataframe Ready for Hypothesis Testing: ---\")\n",
        "employee_df_clean.info()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Hypothesis testing - Are high-performers leaving due to wage stagnation?"
      ],
      "metadata": {
        "id": "IRlNSis3_88P"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from scipy import stats # We'll use this for a t-test\n",
        "\n",
        "# --- 1. Define and Segment \"High-Performers\" ---\n",
        "# Let's define a high-performer as anyone with a ManagerRating of 4 or 5\n",
        "high_performers_df = employee_df_clean[\n",
        "    employee_df_clean['ManagerRating'] >= 4.0\n",
        "].copy()\n",
        "\n",
        "print(f\"Total employees: 1470\")\n",
        "print(f\"Identified {len(high_performers_df)} 'High-Performers' (Manager Rating 4 or 5).\")\n",
        "print(\"---\")\n",
        "\n",
        "\n",
        "# --- 2. Analyze Salary for High-Performers ---\n",
        "print(\"Analyzing Salary for High-Performers...\")\n",
        "\n",
        "# Separate high-performers who stayed vs. left\n",
        "hp_stayed = high_performers_df[high_performers_df['Attrition_Binary'] == 0]\n",
        "hp_left = high_performers_df[high_performers_df['Attrition_Binary'] == 1]\n",
        "\n",
        "# Calculate averages\n",
        "avg_salary_stayed = hp_stayed['Salary'].mean()\n",
        "avg_salary_left = hp_left['Salary'].mean()\n",
        "\n",
        "print(f\"Avg. Salary for High-Performers who STAYED: ${avg_salary_stayed:,.2f}\")\n",
        "print(f\"Avg. Salary for High-Performers who LEFT:   ${avg_salary_left:,.2f}\")\n",
        "\n",
        "# --- Perform a T-test to check for statistical significance ---\n",
        "# A low p-value (e.g., < 0.05) means the difference is significant.\n",
        "t_stat, p_value = stats.ttest_ind(hp_stayed['Salary'], hp_left['Salary'], nan_policy='omit')\n",
        "print(f\"T-test p-value for Salary difference: {p_value:.4f}\")\n",
        "\n",
        "if p_value < 0.05:\n",
        "    print(\"Result: The salary difference is statistically significant.\")\n",
        "else:\n",
        "    print(\"Result: The salary difference is NOT statistically significant.\")\n",
        "\n",
        "\n",
        "# --- 3. Visualize Salary Analysis ---\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.boxplot(\n",
        "    x='Attrition_Binary',\n",
        "    y='Salary',\n",
        "    data=high_performers_df,\n",
        "    palette=['#55A868', '#C44E52']\n",
        ")\n",
        "plt.title('Salary Distribution for High-Performers (Rating 4-5)', fontsize=16)\n",
        "plt.xlabel('Attrition Status', fontsize=12)\n",
        "plt.ylabel('Annual Salary ($)', fontsize=12)\n",
        "plt.xticks([0, 1], ['Stayed (0)', 'Left (1)'])\n",
        "plt.grid(axis='y', linestyle='--', alpha=0.7)\n",
        "plt.tight_layout()\n",
        "plt.savefig('hp_salary_vs_attrition_boxplot.png')\n",
        "print(\"\\nSaved plot: hp_salary_vs_attrition_boxplot.png\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 867
        },
        "id": "XVfQuJOTAAtL",
        "outputId": "6bc8583e-a0b1-46d6-b4f4-cb78a1ea5382"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total employees: 1470\n",
            "Identified 610 'High-Performers' (Manager Rating 4 or 5).\n",
            "---\n",
            "Analyzing Salary for High-Performers...\n",
            "Avg. Salary for High-Performers who STAYED: $120,237.10\n",
            "Avg. Salary for High-Performers who LEFT:   $86,956.28\n",
            "T-test p-value for Salary difference: 0.0016\n",
            "Result: The salary difference is statistically significant.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-4199472437.py:45: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Saved plot: hp_salary_vs_attrition_boxplot.png\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from scipy import stats\n",
        "\n",
        "# We can re-use the 'high_performers_df', 'hp_stayed', and 'hp_left'\n",
        "# dataframes we already created.\n",
        "\n",
        "# --- 1. Analyze Promotions for High-Performers ---\n",
        "print(\"Analyzing Promotions for High-Performers...\")\n",
        "\n",
        "# Calculate averages\n",
        "avg_promo_stayed = hp_stayed['YearsSinceLastPromotion'].mean()\n",
        "avg_promo_left = hp_left['YearsSinceLastPromotion'].mean()\n",
        "\n",
        "print(f\"Avg. Years Since Last Promotion (STAYED): {avg_promo_stayed:.2f} years\")\n",
        "print(f\"Avg. Years Since Last Promotion (LEFT):   {avg_promo_left:.2f} years\")\n",
        "\n",
        "# --- Perform a T-test to check for statistical significance ---\n",
        "t_stat, p_value = stats.ttest_ind(hp_stayed['YearsSinceLastPromotion'], hp_left['YearsSinceLastPromotion'], nan_policy='omit')\n",
        "print(f\"T-test p-value for Promotion difference: {p_value:.4f}\")\n",
        "\n",
        "if p_value < 0.05:\n",
        "    print(\"Result: The promotion difference is statistically significant.\")\n",
        "else:\n",
        "    print(\"Result: The promotion difference is NOT statistically significant.\")\n",
        "\n",
        "\n",
        "# --- 2. Visualize Promotion Analysis ---\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.boxplot(\n",
        "    x='Attrition_Binary',\n",
        "    y='YearsSinceLastPromotion',\n",
        "    data=high_performers_df,\n",
        "    palette=['#55A868', '#C44E52']\n",
        ")\n",
        "plt.title('Years Since Last Promotion for High-Performers (Rating 4-5)', fontsize=16)\n",
        "plt.xlabel('Attrition Status', fontsize=12)\n",
        "plt.ylabel('Years Since Last Promotion', fontsize=12)\n",
        "plt.xticks([0, 1], ['Stayed (0)', 'Left (1)'])\n",
        "plt.grid(axis='y', linestyle='--', alpha=0.7)\n",
        "plt.tight_layout()\n",
        "plt.savefig('hp_promo_vs_attrition_boxplot.png')\n",
        "print(\"\\nSaved plot: hp_promo_vs_attrition_boxplot.png\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 815
        },
        "id": "qTTBCMONA8H5",
        "outputId": "d19807f9-b30e-46f3-c97d-358596967537"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Analyzing Promotions for High-Performers...\n",
            "Avg. Years Since Last Promotion (STAYED): 4.54 years\n",
            "Avg. Years Since Last Promotion (LEFT):   1.68 years\n",
            "T-test p-value for Promotion difference: 0.0000\n",
            "Result: The promotion difference is statistically significant.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-1861756759.py:32: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Saved plot: hp_promo_vs_attrition_boxplot.png\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# --- Final Report: Hypothesis Test Results ---\n",
        "\n",
        "print(\"\\n\\n--- HYPOTHESIS TEST: FINAL INSIGHTS ---\")\n",
        "print(\"==================================================\")\n",
        "print(\"TO: Stakeholder (e.g., Head of HR, Compensation Committee)\")\n",
        "print(\"FROM: Business Analytics\")\n",
        "print(\"RE: Follow-up Analysis on High-Performer Attrition\")\n",
        "print(\"==================================================\\n\")\n",
        "\n",
        "print(\"In our initial EDA, we found that high-performers were leaving. Our hypothesis was that this was due to 'career stagnation' (a lack of promotions and pay).\\n\")\n",
        "print(\"We tested this hypothesis by isolating 610 high-performers (Manager Rating 4-5) and analyzing their salary and promotion data. The results are conclusive and reveal a more specific problem.\\n\")\n",
        "\n",
        "print(\"### Finding 1: We are losing our UNDERPAID high-performers.\")\n",
        "print(\"---------------------------------------------------------\")\n",
        "print(f\" - High-performers who STAYED earn an avg. salary of ${avg_salary_stayed:,.2f}.\")\n",
        "print(f\" - High-performers who LEFT earned an avg. salary of ${avg_salary_left:,.2f}.\")\n",
        "print(f\" - This $33,000+ difference is statistically significant (p-value: 0.0016). We are successfully retaining high-performers who are paid well, but losing those who are underpaid.\\n\")\n",
        "\n",
        "\n",
        "print(\"### Finding 2 (The Twist): We are losing our RECENTLY PROMOTED high-performers.\")\n",
        "print(\"------------------------------------------------------------------\")\n",
        "print(\"Our 'stagnation' hypothesis was wrong. The data shows the opposite:\")\n",
        "print(f\" - High-performers who STAYED have been in their role for an avg. of {avg_promo_stayed:.2f} years since their last promotion.\")\n",
        "print(f\" - High-performers who LEFT were in their role for only {avg_promo_left:.2f} years.\")\n",
        "print(f\" - This difference is also highly significant (p-value: 0.0000).\\n\")\n",
        "\n",
        "\n",
        "print(\"### Actionable Conclusion: Our promotions are not funded correctly.\")\n",
        "print(\"------------------------------------------------------------------\")\n",
        "print(\"The data tells a clear story: We identify a high-performer and promote them, but their salary does not increase to a competitive level (remaining at $87k vs. the $120k of their peers).\")\n",
        "print(\"These newly promoted, ambitious employees use their new title to get a job at a competitor who will pay them their market worth.\")\n",
        "print(\"\\n**RECOMMENDATION:** We must review our compensation bands, especially post-promotion. A promotion must be tied to a significant salary adjustment to ensure we are not just 'up-skilling and promoting' our best talent for their next job elsewhere.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HB_AqrhmCHta",
        "outputId": "9a509b1b-20a9-4207-bfda-b6e2054359d1"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "\n",
            "--- HYPOTHESIS TEST: FINAL INSIGHTS ---\n",
            "==================================================\n",
            "TO: Stakeholder (e.g., Head of HR, Compensation Committee)\n",
            "FROM: Business Analytics\n",
            "RE: Follow-up Analysis on High-Performer Attrition\n",
            "==================================================\n",
            "\n",
            "In our initial EDA, we found that high-performers were leaving. Our hypothesis was that this was due to 'career stagnation' (a lack of promotions and pay).\n",
            "\n",
            "We tested this hypothesis by isolating 610 high-performers (Manager Rating 4-5) and analyzing their salary and promotion data. The results are conclusive and reveal a more specific problem.\n",
            "\n",
            "### Finding 1: We are losing our UNDERPAID high-performers.\n",
            "---------------------------------------------------------\n",
            " - High-performers who STAYED earn an avg. salary of $120,237.10.\n",
            " - High-performers who LEFT earned an avg. salary of $86,956.28.\n",
            " - This $33,000+ difference is statistically significant (p-value: 0.0016). We are successfully retaining high-performers who are paid well, but losing those who are underpaid.\n",
            "\n",
            "### Finding 2 (The Twist): We are losing our RECENTLY PROMOTED high-performers.\n",
            "------------------------------------------------------------------\n",
            "Our 'stagnation' hypothesis was wrong. The data shows the opposite:\n",
            " - High-performers who STAYED have been in their role for an avg. of 4.54 years since their last promotion.\n",
            " - High-performers who LEFT were in their role for only 1.68 years.\n",
            " - This difference is also highly significant (p-value: 0.0000).\n",
            "\n",
            "### Actionable Conclusion: Our promotions are not funded correctly.\n",
            "------------------------------------------------------------------\n",
            "The data tells a clear story: We identify a high-performer and promote them, but their salary does not increase to a competitive level (remaining at $87k vs. the $120k of their peers).\n",
            "These newly promoted, ambitious employees use their new title to get a job at a competitor who will pay them their market worth.\n",
            "\n",
            "**RECOMMENDATION:** We must review our compensation bands, especially post-promotion. A promotion must be tied to a significant salary adjustment to ensure we are not just 'up-skilling and promoting' our best talent for their next job elsewhere.\n"
          ]
        }
      ]
    }
  ]
}